*** TODO: I am being very inconsistent about frontend, backend, worker,
*** worker... If I am to expect anyone to be able to follow along I'm going
*** to have to come up with a consistent dictionary. 
***
*** Dictionary started, will remove this note when I'm done converting
*** all existing documentation to the terminology.

While writing documentation to build against I'll have ideas for things that
should be documented better later. That's what this file is for.

[ CONNECTIONS ]

Examples of connections to wrap my head around how they work.
C = worker
B = broker

 - worker startup, broker down:
* worker must be informed of a broker to connect to. If it's saving it's config
* locally it may remember, and also have the group information to fallback on
* to find a new broker. This will be encouraged for workers, but not required.

C --- CONNECT ---> B
No response from B, worker fails to start with error.

 - worker startup, broker up
* worker must be informed of a broker to connect to. If it's saving it's config
* locally it may remember, and also have the group information to fallback on
* to find a new broker. This will be encouraged for workers, but not required.
C ------CONNECT ----> B
C <---- CONFIG ------ B
C ----- PING -------> B
C <---- PONG -------- B
 
* It's at this point that the broker registers the worker in the LRU queue.

