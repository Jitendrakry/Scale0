While writing documentation to build against I'll have ideas for things that
should be documented better later. That's what this file is for.

[ PROTOCOL ]
CHECKCONFIG: When intiating a new connection the client must validate it's
             config.
    Options:
        config_type:     
            The format the client accepts the config in. Can be JSON, XML
            or ZFL.

        config_version:
            The version of config the client has on record.

If the application already has a config, it will also pass a configversion
option.

CONFIGACK - Broker reply when CHECKCONFIG version request matches the version
on the broker.

CONFIG - Broker reply with configuration. Type will be specified as part of
the request.

READY: This tells the Broker that the worker client is availble for new
       connections. It's at this point that the client is added to the 
       LRU queue. 
    Options:
        services:
            Services the client accepts requests for.

        heartbeat:
            If the client supports heartbeat. Clients that block
            during processing may not support heartbeat. The
            recommendation will be to always support heartbeat.

        hbeatinterval:
            The interval at which the broker can expect heartbeat requests
            from the client.

HEARTBEAT: This is the standard heartbeat request.
    Options:
        time:
            Time according to client when heartbeat request was sent.
        config_version: 
            Configuration version. Heavy to include, but will help ensure
            clients are running against the current configuration.

[ BROKER CONFIG ]
This details all the information a brokers require for operation. Not all
options need to be pushed to clients. What options are required for clients
will be detailed later.

frontend_port: 
    The port on which frontends connect.

backend_port: 
    The port on which backends connect.

config_pub_port:
    The port on which this broker publishes new configurations.

config_sub_ports:
    The port(s) on which the broker listens for new configurations.

    *** The idea here is that everything, when possible, should listen for
    configuration changes from more than one source in order to provide
    reliability and redundancy. ****
